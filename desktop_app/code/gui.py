
# # This file was generated by the Tkinter Designer by Parth Jadhav
# # https://github.com/ParthJadhav/Tkinter-Designer


# from pathlib import Path

# # from tkinter import *
# # Explicit imports to satisfy Flake8
# from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage,Label


# OUTPUT_PATH = Path(__file__).parent
# ASSETS_PATH = OUTPUT_PATH / Path("./assets")


# def relative_to_assets(path: str) -> Path:
#     return ASSETS_PATH / Path(path)


# min_height = 600
# min_width = 800
# max_height = 1440
# max_width = 1024
# window = Tk()

# f1 = Frame(window)


 
# #Get the current screen width and height
# screen_width = window.winfo_screenwidth()
# screen_height = window.winfo_screenheight()

# window.geometry(f"{screen_width}x{screen_height}")
# window.configure(bg = "#FFFFFF")
# # creating main tkinter window/toplevel
 
# # this will create a label widget
# l1 = Label(window, text = "Height")
# l2 = Label(window, text = "Width")
 
# # grid method to arrange labels in respective
# # rows and columns as specified
# l1.grid(row = 0, column = 0, pady = 2) 
# l2.grid(row = 3, column = 2, pady = 2,columnspan=100)

# image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
# # image_image_1 = image_image_1.subsample(2, 2)
# Label(window, image=image_image_1,bg='#FFFFFF').grid(row = 0, column = 2,
#      rowspan = 2, padx = 5, pady = 5)

# window.resizable(True, True)
# window.mainloop()


import tkinter as tk
from tkinter import ttk, Tk, Canvas, Entry, Text, Button, PhotoImage,Label
from tkinter import *
from tkinter.ttk import *
from pathlib import Path
from tkinter.filedialog import askopenfile 
import time
 

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")
LARGEFONT =("Verdana", 27)
ERimage = ""

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
  
class tkinterApp(tk.Tk):
    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)
        container = tk.Frame(self)
        container.pack(side = "top", fill = "both", expand = True)
        container.configure(bg = "#FFFFFF")
        container.grid_rowconfigure(0, weight = 1)
        container.grid_columnconfigure(0, weight = 1)
        self.frames = {} 
        for F in (StartPage, Page1, Page2):
  
            frame = F(container, self)
            self.frames[F] = frame
  
            frame.grid(row = 0, column = 0, sticky ="nsew")
            frame.configure(bg = "white")
            canvas = Canvas(
                frame,
                bg = "#FFFFFF",
                height = 1024,
                width = 180,
                bd = 0,
                highlightthickness = 0,
                relief = "ridge"
            )
            canvas.place(x = 0, y = 0)
            canvas.create_rectangle(
                0.0,
                0.0,
                181.0,
                1024.0,
                fill="#0F1136",
                outline="")
        self.show_frame(StartPage)
  
    # to display the current frame passed as parameter
    def show_frame(self, cont):
        frame = self.frames[cont]
        frame.tkraise()

    def open_file(self):
        file_path = self.askopenfile(mode='r', filetypes=[('Image Files', '*jpeg')])
        return file_path

    
# first window frame startpage
class StartPage(tk.Frame):
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)

        ## add logo image
        self.viewWindow = Canvas(self, bg="white")
        self.viewWindow.pack(side="top", fill="both", expand=True)
        self.logo_image = tk.PhotoImage(file=relative_to_assets("image_1.png"))
        self.viewWindow.image = self.logo_image
        screen_width = self.winfo_screenwidth()
        self.viewWindow.create_image(screen_width/2, 300, anchor="center", image=self.logo_image, tags="bg_img")
        
        style = ttk.Style()
        style.theme_use('alt')
        style.configure('TLabel', background = 'white', foreground = '#0F1136',font= LARGEFONT)
        label = ttk.Label(self, text ="Welcome To ERevive")
        label.place(x = screen_width/2, y = 600, anchor="center")

        ## add camera image
        self.upload_image = tk.PhotoImage(file=relative_to_assets("upload_4.png"))
        self.viewWindow.image = self.upload_image
        screen_width = self.winfo_screenwidth()
        screen_height = self.winfo_screenheight()
        self.viewWindow.create_image(screen_width/2, 760, anchor="center", image=self.upload_image, tags="bg_img")

        ## creating button to navigate to next page
        style = ttk.Style()
        style.theme_use('alt')
        style.configure('TButton', background = '#0F1136', foreground = 'white', width = 20, borderwidth=3, focusthickness=3, focuscolor='none',font= LARGEFONT)
        style.map('TButton', background=[('active','#ffc809')])
        button1 = ttk.Button(self, text ="Move To Next Step ...",
        command = lambda : [controller.show_frame(Page1)])
        button1.place(x = screen_width/2, y = screen_height-150, width = 499.0, height = 100.0, anchor = "center")

# second window frame page1
class Page1(tk.Frame):
     
    def __init__(self, parent, controller):
         
        tk.Frame.__init__(self, parent)
        label = ttk.Label(self, text ="Page 1", font = LARGEFONT)
        label.grid(row = 0, column = 4, padx = 10, pady = 10)
  
        # button to show frame 2 with text
        # layout2
        button1 = ttk.Button(self, text ="StartPage",
                            command = lambda : controller.show_frame(StartPage))
     
        # putting the button in its place
        # by using grid
        button1.grid(row = 1, column = 1, padx = 10, pady = 10)
  
        # button to show frame 2 with text
        # layout2
        button2 = ttk.Button(self, text ="Page 2",
                            command = lambda : controller.show_frame(Page2))
     
        # putting the button in its place by
        # using grid
        button2.grid(row = 2, column = 1, padx = 10, pady = 10)
  
  
  
  
# third window frame page2
class Page2(tk.Frame):
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        label = ttk.Label(self, text ="Page 2", font = LARGEFONT)
        label.grid(row = 0, column = 4, padx = 10, pady = 10)
  
        # button to show frame 2 with text
        # layout2
        button1 = ttk.Button(self, text ="Page 1",
                            command = lambda : controller.show_frame(Page1))
     
        # putting the button in its place by
        # using grid
        button1.grid(row = 1, column = 1, padx = 10, pady = 10)
  
        # button to show frame 3 with text
        # layout3
        button2 = ttk.Button(self, text ="Startpage",
                            command = lambda : controller.show_frame(StartPage))
     
        # putting the button in its place by
        # using grid
        button2.grid(row = 2, column = 1, padx = 10, pady = 10)
  
  

app = tkinterApp()
app.mainloop()
