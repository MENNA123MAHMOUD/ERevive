{"testSchema": {"DEPARTMENT": {"ForgeinKey": [{"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "ssn", "attributeName": "EMPLOYEE_Manages_ssn", "dataType": "str", "patricipaction": "partial"}], "TableName": "DEPARTMENT", "TableType": "", "attributes": {"EMPLOYEE_Manages_ssn": "str", "name": "str", "start_date": "datetime"}, "isWeak": false, "primaryKey": ["name"]}, "DEPARTMENT_location": {"ForgeinKey": [{"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "name", "attributeName": "DEPARTMENT_name", "dataType": "str", "patricipaction": "full"}], "TableName": "DEPARTMENT_location", "TableType": "", "attributes": {"DEPARTMENT_name": "str", "location": "str"}, "isWeak": false, "primaryKey": ["location", "DEPARTMENT_name"]}, "DEPENDENT": {"ForgeinKey": [{"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "ssn", "attributeName": "Dependents_EMPLOYEE_ssn", "dataType": "str", "patricipaction": "partial"}], "TableName": "DEPENDENT", "TableType": "", "attributes": {"Dependents_EMPLOYEE_ssn": "str", "birth_date": "datetime", "name": "str", "relatlonship": "str", "sex": "str"}, "isWeak": true, "primaryKey": ["Dependents_EMPLOYEE_ssn"]}, "EMPLOYEE": {"ForgeinKey": [{"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "name", "attributeName": "DEPARTMENT_Employed_name", "dataType": "str", "patricipaction": "full"}], "TableName": "EMPLOYEE", "TableType": "", "attributes": {"DEPARTMENT_Employed_name": "str", "addres": "str", "birth_date": "datetime", "first_name": "str", "last_name": "str", "middle_initis": "str", "salary": "float", "sex": "str", "ssn": "str", "start_date": "datetime", "status": "str"}, "isWeak": false, "primaryKey": ["ssn"]}, "PROJECT": {"ForgeinKey": [{"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "name", "attributeName": "DEPARTMENT_Assigned_name", "dataType": "str", "patricipaction": "partial"}], "TableName": "PROJECT", "TableType": "", "attributes": {"DEPARTMENT_Assigned_name": "str", "budget": "float", "location": "str", "name": "str"}, "isWeak": false, "primaryKey": ["name"]}, "Works_EMPLOYEE_PROJECT": {"ForgeinKey": [{"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "ssn", "attributeName": "EMPLOYEE_ssn", "dataType": "str", "patricipaction": "full"}, {"ForignKeyTable": "PROJECT", "ForignKeyTableAttributeName": "name", "attributeName": "PROJECT_name", "dataType": "str", "patricipaction": "full"}], "TableName": "Works_EMPLOYEE_PROJECT", "TableType": "", "attributes": {"EMPLOYEE_ssn": "str", "PROJECT_name": "str", "hours": "int", "start_date": "datetime"}, "isWeak": false, "primaryKey": ["EMPLOYEE_ssn", "PROJECT_name"]}}, "schemaGraph": {"DEPARTMENT": [{"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "ssn", "attributeName": "EMPLOYEE_Manages_ssn"}, {"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "DEPARTMENT_Employed_name", "attributeName": "name"}, {"ForignKeyTable": "PROJECT", "ForignKeyTableAttributeName": "DEPARTMENT_Assigned_name", "attributeName": "name"}, {"ForignKeyTable": "DEPARTMENT_location", "ForignKeyTableAttributeName": "DEPARTMENT_name", "attributeName": "name"}], "DEPARTMENT_location": [{"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "name", "attributeName": "DEPARTMENT_name"}], "DEPENDENT": [{"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "ssn", "attributeName": "Dependents_EMPLOYEE_ssn"}], "EMPLOYEE": [{"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "EMPLOYEE_Manages_ssn", "attributeName": "ssn"}, {"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "name", "attributeName": "DEPARTMENT_Employed_name"}, {"ForignKeyTable": "DEPENDENT", "ForignKeyTableAttributeName": "Dependents_EMPLOYEE_ssn", "attributeName": "ssn"}, {"ForignKeyTable": "Works_EMPLOYEE_PROJECT", "ForignKeyTableAttributeName": "EMPLOYEE_ssn", "attributeName": "ssn"}], "PROJECT": [{"ForignKeyTable": "DEPARTMENT", "ForignKeyTableAttributeName": "name", "attributeName": "DEPARTMENT_Assigned_name"}, {"ForignKeyTable": "Works_EMPLOYEE_PROJECT", "ForignKeyTableAttributeName": "PROJECT_name", "attributeName": "name"}], "Works_EMPLOYEE_PROJECT": [{"ForignKeyTable": "EMPLOYEE", "ForignKeyTableAttributeName": "ssn", "attributeName": "EMPLOYEE_ssn"}, {"ForignKeyTable": "PROJECT", "ForignKeyTableAttributeName": "name", "attributeName": "PROJECT_name"}]}, "entityDict": {"DEPARTMENT": "DEPARTMENT", "DEPARTMENT_location": "DEPARTMENT_location", "DEPENDENT": "DEPENDENT", "EMPLOYEE": "EMPLOYEE", "PROJECT": "PROJECT", "Works_EMPLOYEE_PROJECT": "Works_EMPLOYEE_PROJECT"}, "schemaEntityNames": ["DEPARTMENT", "EMPLOYEE", "PROJECT", "DEPENDENT", "DEPARTMENT_location", "Works_EMPLOYEE_PROJECT"], "clusters": {"department_location": [[{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_filteredby_department_name", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location WHERE DEPARTMENT_location.DEPARTMENT_name in value;", "queryObj": {"aggrAttrs": [], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 0.5, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["city", "name"], "geographics.city_name", "str"], [null, null, 0, "*", "restaurant.*", null]], "mappedAttributesDict": {"geographics.city_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedEntitesDict": {"location": "DEPARTMENT_location"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [["restaurant.*", "count"]], "entities": ["location", "geographics", "restaurant"], "groupByAttrs": ["geographics.city_name"], "havingAttrs": [], "joinAttrs": ["location.city_name", "geographics.city_name", "restaurant.id", "location.restaurant_id"], "orderByAttrs": [], "query": "select geographics.city_name , count ( restaurants.* ) from locations join geographics on locations.city_name = geographics.city_name join restaurants on restaurants.id = locations.restaurant_id where geographics.city_name in ( ' kenwood ' , ' saratoga ' ) group by geographics.city_name", "selectAttrs": ["geographics.city_name"], "whereAttrs": [["geographics.city_name", "in", "value", "None"]]}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": [], "whereAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "in", "value", ""]], "whereScore": 1}, "queryParams": [["DEPARTMENT_location.DEPARTMENT_name", "str", "in", null]], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str"}, "ui_name": "get department_location filtered by department_name", "url": "department_location/get_department_location_filteredby_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_department_name", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( DEPARTMENT_location.DEPARTMENT_name ), DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.DEPARTMENT_name;", "queryObj": {"aggrAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 1, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "company.name", "str"]], "mappedAttributesDict": {"company.name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["office", "location"]]], "mappedEntitesDict": {"office_location": "DEPARTMENT_location"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [["company.name", "count"]], "entities": ["office_location", "building", "company"], "groupByAttrs": ["company.name"], "havingAttrs": [], "joinAttrs": ["office_location.building_id", "building.id", "office_location.company_id", "company.id"], "orderByAttrs": [], "query": "select t3.name , count ( t3.name ) from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t3.name", "selectAttrs": ["company.name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "whereAttrs": [], "whereScore": 0}, "queryParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "count_DEPARTMENT_location.DEPARTMENT_name": "int"}, "ui_name": "get department_location grouped by department_name", "url": "department_location/get_department_location_groupedby_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'count_DEPARTMENT_location.DEPARTMENT_name' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_department_name_orderedby_department_name", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( DEPARTMENT_location.DEPARTMENT_name ), DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.DEPARTMENT_name ORDER BY DEPARTMENT_location.DEPARTMENT_name DESC;", "queryObj": {"aggrAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 1, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "company.name", "str"]], "mappedAttributesDict": {"company.name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["office", "location"]]], "mappedEntitesDict": {"office_location": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], ""]], "origQuery": {"aggrAttrs": [["company.name", "count"]], "entities": ["office_location", "building", "company"], "groupByAttrs": ["company.name"], "havingAttrs": [], "joinAttrs": ["office_location.building_id", "building.id", "office_location.company_id", "company.id"], "orderByAttrs": [["company.name", ""]], "query": "select t3.name , count ( t3.name ) from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t3.name order by t3.name asc", "selectAttrs": ["company.name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_DEPARTMENT_name_desc", "bool", null, ""]], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "count_DEPARTMENT_location.DEPARTMENT_name": "int"}, "ui_name": "get department_location grouped by department_name ordered by department_name", "url": "department_location/get_department_location_groupedby_department_name_orderedby_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'count_DEPARTMENT_location.DEPARTMENT_name' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_department_name_orderedby_count_department_name", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( DEPARTMENT_location.DEPARTMENT_name ), DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.DEPARTMENT_name ORDER BY count ( DEPARTMENT_location.DEPARTMENT_name ) ASC;", "queryObj": {"aggrAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 1, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "company.name", "str"]], "mappedAttributesDict": {"company.name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["office", "location"]]], "mappedEntitesDict": {"office_location": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "origQuery": {"aggrAttrs": [["company.name", "count"]], "entities": ["office_location", "building", "company"], "groupByAttrs": ["company.name"], "havingAttrs": [], "joinAttrs": ["office_location.building_id", "building.id", "office_location.company_id", "company.id"], "orderByAttrs": [["company.name", "count"]], "query": "select t3.name , count ( t3.name ) from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t3.name order by count ( t3.name ) asc", "selectAttrs": ["company.name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_count_DEPARTMENT_name_desc", "bool", null, "count"]], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "count_DEPARTMENT_location.DEPARTMENT_name": "int"}, "ui_name": "get department_location grouped by department_name ordered by count_department_name", "url": "department_location/get_department_location_groupedby_department_name_orderedby_count_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'count_DEPARTMENT_location.DEPARTMENT_name' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( * ), count ( DEPARTMENT_location.location ), DEPARTMENT_location.location FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.location;", "queryObj": {"aggrAttrs": [[["*", null], "count"], [["DEPARTMENT_location.location", "str"], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 1, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [["DEPARTMENT_location.location", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "location", 0.25, ["date", "in", "location", "from"], "date_in_location_from", "str"]], "mappedAttributesDict": {"date_in_location_from": ["DEPARTMENT_location.location", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [["date_in_location_from", "count"]], "entities": ["document_location"], "groupByAttrs": ["date_in_location_from"], "havingAttrs": [], "joinAttrs": [], "orderByAttrs": [], "query": "select date_in_location_from , count ( date_in_location_from ) from document_locations group by date_in_location_from", "selectAttrs": ["date_in_location_from"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "selectScore": 1874, "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "whereAttrs": [], "whereScore": 0}, "queryParams": [], "response": {"DEPARTMENT_location.location": "str", "count_all": "int"}, "ui_name": "get department_location grouped by location", "url": "department_location/get_department_location_groupedby_location"}, "{ 'DEPARTMENT_location.location' : fields.String,'count_all' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location_orderedby_location", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( * ), count ( DEPARTMENT_location.location ), DEPARTMENT_location.location FROM DEPARTMENT_location ORDER BY DEPARTMENT_location.location ASC;", "queryObj": {"aggrAttrs": [[["*", null], "count"], [["DEPARTMENT_location.location", "str"], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 1, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "location", 0.25, ["date", "in", "location", "from"], "date_in_location_from", "str"]], "mappedAttributesDict": {"date_in_location_from": ["DEPARTMENT_location.location", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT_location.location", "str"], ""]], "origQuery": {"aggrAttrs": [["date_in_location_from", "count"]], "entities": ["document_location"], "groupByAttrs": ["date_in_location_from"], "havingAttrs": [], "joinAttrs": [], "orderByAttrs": [["date_in_location_from", ""]], "query": "select date_in_location_from , count ( date_in_location_from ) from document_locations group by date_in_location_from order by date_in_location_from asc", "selectAttrs": ["date_in_location_from"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "selectScore": 1874, "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_location_desc", "bool", null, ""]], "response": {"DEPARTMENT_location.location": "str", "count_all": "int"}, "ui_name": "get department_location grouped by location ordered by location", "url": "department_location/get_department_location_groupedby_location_orderedby_location"}, "{ 'DEPARTMENT_location.location' : fields.String,'count_all' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location_orderedby_count_location", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( DEPARTMENT_location.location ), DEPARTMENT_location.location FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.location ORDER BY count ( DEPARTMENT_location.location ) ASC;", "queryObj": {"aggrAttrs": [[["DEPARTMENT_location.location", "str"], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 1, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [["DEPARTMENT_location.location", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "location", 0.25, ["date", "in", "location", "from"], "date_in_location_from", "str"]], "mappedAttributesDict": {"date_in_location_from": ["DEPARTMENT_location.location", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT_location.location", "str"], "count"]], "origQuery": {"aggrAttrs": [["date_in_location_from", "count"]], "entities": ["document_location"], "groupByAttrs": [], "havingAttrs": [], "joinAttrs": [], "orderByAttrs": [["date_in_location_from", "count"]], "query": "select date_in_location_from , count ( date_in_location_from ) from document_locations order by count ( date_in_location_from ) asc", "selectAttrs": ["date_in_location_from"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "selectScore": 1874, "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_count_location_desc", "bool", null, "count"]], "response": {"DEPARTMENT_location.location": "str", "count_DEPARTMENT_location.location": "int"}, "ui_name": "get department_location grouped by location ordered by count_location", "url": "department_location/get_department_location_groupedby_location_orderedby_count_location"}, "{ 'DEPARTMENT_location.location' : fields.String,'count_DEPARTMENT_location.location' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location_orderedby_count_all", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( * ), DEPARTMENT_location.location FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.location ORDER BY count ( * ) DESC;", "queryObj": {"aggrAttrs": [[["*", null], "count"]], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 0.5, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [["DEPARTMENT_location.location", "str"]], "havingAttrs": [], "mappedAttributes": [[null, "*", 0, "*", "*", null], ["DEPARTMENT_location", "location", 0.5, ["location", "code"], "location_code", "str"]], "mappedAttributesDict": {"*": ["*", null], "location_code": ["DEPARTMENT_location.location", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "orderByAttrs": [[["*", null], "count"]], "origQuery": {"aggrAttrs": [], "entities": ["document_location"], "groupByAttrs": ["location_code"], "havingAttrs": [], "joinAttrs": [], "orderByAttrs": [["*", "count"]], "query": "select location_code from document_locations group by location_code order by count ( * ) desc limit 1", "selectAttrs": ["location_code"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "selectScore": 1874, "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_count_of_rows_desc", "bool", null, "count"]], "response": {"DEPARTMENT_location.location": "str", "count_all": "int"}, "ui_name": "get department_location grouped by location ordered by count_all", "url": "department_location/get_department_location_groupedby_location_orderedby_count_all"}, "{ 'DEPARTMENT_location.location' : fields.String,'count_all' : fields.Integer }"], [{"bodyParams": [], "cluster_name": "department_location", "endpoint_name": "get_department_location_orderedby_department_name", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location ORDER BY DEPARTMENT_location.DEPARTMENT_name DESC;", "queryObj": {"aggrAttrs": [], "bestJoin": [], "cleanedEntities": [["department", "location"]], "coverage": 0.5, "entities": ["DEPARTMENT_location"], "goals": ["DEPARTMENT_location"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "name", "str"], [null, null, 0, "id", "id", null]], "mappedAttributesDict": {"name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["status"]]], "mappedEntitesDict": {"status": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], ""]], "origQuery": {"aggrAttrs": [], "entities": ["station", "status"], "groupByAttrs": [], "havingAttrs": [], "joinAttrs": ["station.id", "status.station_id"], "orderByAttrs": [["name", ""]], "query": "select name , id from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available > 12 order by name asc", "selectAttrs": ["name", "id"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": [], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_DEPARTMENT_name_desc", "bool", null, ""]], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str"}, "ui_name": "get department_location ordered by department_name", "url": "department_location/get_department_location_orderedby_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String }"]], "dependent": [[{"bodyParams": [], "cluster_name": "dependent", "endpoint_name": "get_dependent_filteredby_sex", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT count ( * ), * FROM DEPENDENT WHERE DEPENDENT.sex = value;", "queryObj": {"aggrAttrs": [[["*", null], "count"]], "bestJoin": [], "cleanedEntities": [["dependent"]], "coverage": 0.5, "entities": ["DEPENDENT"], "goals": ["DEPENDENT"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [[null, "*", 0, "*", "*", null], ["DEPENDENT", "sex", 1, ["sex"], "dependent.sex", "str"]], "mappedAttributesDict": {"*": ["*", null], "dependent.sex": ["DEPENDENT.sex", "str"]}, "mappedEntites": [["DEPENDENT", ["dependent"], 1, ["dependent"]]], "mappedEntitesDict": {"dependent": "DEPENDENT"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [["*", "count"]], "entities": ["dependent"], "groupByAttrs": [], "havingAttrs": [], "joinAttrs": [], "orderByAttrs": [], "query": "select count ( * ) from dependent as dependentalias0 where dependentalias0.sex = \" var0 \" ;", "selectAttrs": [], "whereAttrs": [["dependent.sex", "=", "value", "None"]]}, "rank": 0, "selectAttrs": [], "selectScore": 0, "updatedGroupByAttrs": [], "whereAttrs": [[["DEPENDENT.sex", "str"], "=", "value", ""]], "whereScore": 1960}, "queryParams": [["DEPENDENT.sex", "str", "=", null]], "response": {"count_all": "int"}, "ui_name": "get dependent filtered by sex", "url": "dependent/get_dependent_filteredby_sex"}, "{ 'count_all' : fields.Integer }"]], "employee_department_location_department": [[{"bodyParams": [], "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_filteredby_department_name", "is_single_entity": false, "is_updated": false, "method": "get", "query": "SELECT EMPLOYEE.last_name, EMPLOYEE.first_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name and EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn and DEPARTMENT_location.DEPARTMENT_name like value;", "queryObj": {"aggrAttrs": [], "bestJoin": [" DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name", " EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn"], "cleanedEntities": [["employee"], ["department", "location"]], "coverage": 0.75, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "goals": ["DEPARTMENT_location", "EMPLOYEE", "DEPARTMENT"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [[null, null, 0, "city", "location.city", null], ["EMPLOYEE", "first_name", 0.5, ["first", "name"], "employee.first_name", "str"], ["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["first", "name"], "employees.first_name", "str"], ["EMPLOYEE", "last_name", 0.5, ["last", "name"], "employee.last_name", "str"]], "mappedAttributesDict": {"employee.first_name": ["EMPLOYEE.first_name", "str"], "employee.last_name": ["EMPLOYEE.last_name", "str"], "employees.first_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntites": [["EMPLOYEE", ["employee"], 1, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedEntitesDict": {"DEPARTMENT": "DEPARTMENT", "employee": "EMPLOYEE", "location": "DEPARTMENT_location"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [], "entities": ["employee", "department", "location"], "groupByAttrs": [], "havingAttrs": [], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id"], "orderByAttrs": [], "query": "select t1.first_name , t1.last_name , t3.city from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id where t1.first_name like '%z%'", "selectAttrs": ["employee.first_name", "employee.last_name", "location.city"], "whereAttrs": [["employees.first_name", "like", "value", "None"]]}, "rank": 0, "selectAttrs": [["EMPLOYEE.last_name", "str"], ["EMPLOYEE.first_name", "str"]], "selectScore": 2, "updatedGroupByAttrs": [], "whereAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "like", "value", ""]], "whereScore": 7155}, "queryParams": [["DEPARTMENT_location.DEPARTMENT_name", "str", "like", null]], "response": {"EMPLOYEE.first_name": "str", "EMPLOYEE.last_name": "str"}, "ui_name": "get employee department_location department filtered by department_name", "url": "employee/department_location/department/get_employee_department_location_department_filteredby_department_name"}, "{ 'EMPLOYEE.last_name' : fields.String,'EMPLOYEE.first_name' : fields.String }"], [{"bodyParams": [], "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_groupedby_department_name", "is_single_entity": false, "is_updated": false, "method": "get", "query": "SELECT sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ), DEPARTMENT_location.DEPARTMENT_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name and EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn  GROUP BY DEPARTMENT_location.DEPARTMENT_name;", "queryObj": {"aggrAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "bestJoin": [" DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name", " EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn"], "cleanedEntities": [["employee"], ["department", "location"]], "coverage": 1, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "goals": ["DEPARTMENT_location", "EMPLOYEE", "DEPARTMENT"], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT", "EMPLOYEE_Manages_ssn", 0.3333333333333333, ["employee", "id"], "employee_id", "str"], ["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["country", "name"], "country_name", "str"]], "mappedAttributesDict": {"country_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"], "employee_id": ["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"]}, "mappedEntites": [["EMPLOYEE", ["employee"], 1, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedEntitesDict": {"DEPARTMENT": "DEPARTMENT", "employee": "EMPLOYEE", "location": "DEPARTMENT_location"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [["employee_id", "sum"]], "entities": ["employee", "department", "location", "country"], "groupByAttrs": ["country_name"], "havingAttrs": [], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id", "location.country_id", "country.country_id"], "orderByAttrs": [], "query": "select country_name , sum ( employee_id ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id group by country_name", "selectAttrs": ["country_name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "whereAttrs": [], "whereScore": 0}, "queryParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "sum_DEPARTMENT.EMPLOYEE_Manages_ssn": "str"}, "ui_name": "get employee department_location department grouped by department_name", "url": "employee/department_location/department/get_employee_department_location_department_groupedby_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'sum_DEPARTMENT.EMPLOYEE_Manages_ssn' : fields.String }"], [{"bodyParams": [], "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_groupedby_department_name_orderedby_department_name", "is_single_entity": false, "is_updated": false, "method": "get", "query": "SELECT sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ), DEPARTMENT_location.DEPARTMENT_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name and EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn  GROUP BY DEPARTMENT_location.DEPARTMENT_name ORDER BY DEPARTMENT_location.DEPARTMENT_name ASC;", "queryObj": {"aggrAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "bestJoin": [" DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name", " EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn"], "cleanedEntities": [["employee"], ["department", "location"]], "coverage": 1, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "goals": ["DEPARTMENT_location", "EMPLOYEE", "DEPARTMENT"], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT", "EMPLOYEE_Manages_ssn", 0.3333333333333333, ["employee", "id"], "employee_id", "str"], ["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["country", "name"], "country_name", "str"]], "mappedAttributesDict": {"country_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"], "employee_id": ["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"]}, "mappedEntites": [["EMPLOYEE", ["employee"], 1, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedEntitesDict": {"DEPARTMENT": "DEPARTMENT", "employee": "EMPLOYEE", "location": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], ""]], "origQuery": {"aggrAttrs": [["employee_id", "sum"]], "entities": ["employee", "department", "location", "country"], "groupByAttrs": ["country_name"], "havingAttrs": [], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id", "location.country_id", "country.country_id"], "orderByAttrs": [["country_name", ""]], "query": "select country_name , sum ( employee_id ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id group by country_name order by country_name asc", "selectAttrs": ["country_name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_DEPARTMENT_name_desc", "bool", null, ""]], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "sum_DEPARTMENT.EMPLOYEE_Manages_ssn": "str"}, "ui_name": "get employee department_location department grouped by department_name ordered by department_name", "url": "employee/department_location/department/get_employee_department_location_department_groupedby_department_name_orderedby_department_name"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'sum_DEPARTMENT.EMPLOYEE_Manages_ssn' : fields.String }"], [{"bodyParams": [], "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_groupedby_department_name_orderedby_sum_employee_manages_ssn", "is_single_entity": false, "is_updated": false, "method": "get", "query": "SELECT sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ), DEPARTMENT_location.DEPARTMENT_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name and EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn  GROUP BY DEPARTMENT_location.DEPARTMENT_name ORDER BY sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ) DESC;", "queryObj": {"aggrAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "bestJoin": [" DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name", " EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn"], "cleanedEntities": [["employee"], ["department", "location"]], "coverage": 1, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "goals": ["DEPARTMENT_location", "EMPLOYEE", "DEPARTMENT"], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "havingAttrs": [], "mappedAttributes": [["DEPARTMENT", "EMPLOYEE_Manages_ssn", 0.3333333333333333, ["employee", "id"], "employee_id", "str"], ["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["country", "name"], "country_name", "str"]], "mappedAttributesDict": {"country_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"], "employee_id": ["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"]}, "mappedEntites": [["EMPLOYEE", ["employee"], 1, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedEntitesDict": {"DEPARTMENT": "DEPARTMENT", "employee": "EMPLOYEE", "location": "DEPARTMENT_location"}, "orderByAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "origQuery": {"aggrAttrs": [["employee_id", "sum"]], "entities": ["employee", "department", "location", "country"], "groupByAttrs": ["country_name"], "havingAttrs": [], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id", "location.country_id", "country.country_id"], "orderByAttrs": [["employee_id", "sum"]], "query": "select country_name , sum ( employee_id ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id group by country_name order by sum ( employee_id ) asc", "selectAttrs": ["country_name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "selectScore": 1, "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_sum_EMPLOYEE_Manages_ssn_desc", "bool", null, "sum"]], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "sum_DEPARTMENT.EMPLOYEE_Manages_ssn": "str"}, "ui_name": "get employee department_location department grouped by department_name ordered by sum_employee_manages_ssn", "url": "employee/department_location/department/get_employee_department_location_department_groupedby_department_name_orderedby_sum_employee_manages_ssn"}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'sum_DEPARTMENT.EMPLOYEE_Manages_ssn' : fields.String }"]], "works_employee_project": [[{"bodyParams": [], "cluster_name": "works_employee_project", "endpoint_name": "get_works_employee_project_orderedby_project_name", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT Works_EMPLOYEE_PROJECT.PROJECT_name FROM Works_EMPLOYEE_PROJECT ORDER BY Works_EMPLOYEE_PROJECT.PROJECT_name ASC;", "queryObj": {"aggrAttrs": [], "bestJoin": [], "cleanedEntities": [["work", "employee", "project"]], "coverage": 0.25, "entities": ["Works_EMPLOYEE_PROJECT"], "goals": ["Works_EMPLOYEE_PROJECT"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [[null, null, 0, "reference_number", "publications.reference_number", null], [null, null, 0, "id", "journal.id", null], ["Works_EMPLOYEE_PROJECT", "PROJECT_name", 0.5, ["name"], "journal.name", "str"], [null, null, 0, "name", "conferences.name", null]], "mappedAttributesDict": {"journal.name": ["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]}, "mappedEntites": [["Works_EMPLOYEE_PROJECT", ["work", "employee", "project"], 0.3333333333333333, ["conference"]]], "mappedEntitesDict": {"conference": "Works_EMPLOYEE_PROJECT"}, "orderByAttrs": [[["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"], ""]], "origQuery": {"aggrAttrs": [], "entities": ["publication", "conference", "journal"], "groupByAttrs": [], "havingAttrs": [], "joinAttrs": ["publication.conference_id", "conference.id", "publication.journal_id", "journal.id"], "orderByAttrs": [["journal.name", ""]], "query": "select distinct journals.id from publications join conferences on publications.conference_id = conferences.id join journals on publications.journal_id = journals.id where conferences.name like ' % dapsys % ' and publications.reference_number in ( 843 , 1038 , 332 ) order by journals.name desc", "selectAttrs": ["journal.id"], "whereAttrs": [["conferences.name", "like", "value", "and"], ["publications.reference_number", "in", "value", "None"]]}, "rank": 0, "selectAttrs": [["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]], "selectScore": 16286, "updatedGroupByAttrs": [], "whereAttrs": [], "whereScore": 0}, "queryParams": [["is_order_of_PROJECT_name_desc", "bool", null, ""]], "response": {"Works_EMPLOYEE_PROJECT.PROJECT_name": "str"}, "ui_name": "get works_employee_project ordered by project_name", "url": "works_employee_project/get_works_employee_project_orderedby_project_name"}, "{ 'Works_EMPLOYEE_PROJECT.PROJECT_name' : fields.String }"], [{"bodyParams": [], "cluster_name": "works_employee_project", "endpoint_name": "get_works_employee_project", "is_single_entity": true, "is_updated": false, "method": "get", "query": "SELECT Works_EMPLOYEE_PROJECT.PROJECT_name FROM Works_EMPLOYEE_PROJECT;", "queryObj": {"aggrAttrs": [], "bestJoin": [], "cleanedEntities": [["work", "employee", "project"]], "coverage": 0.3333333333333333, "entities": ["Works_EMPLOYEE_PROJECT"], "goals": ["Works_EMPLOYEE_PROJECT"], "groupByAttrs": [], "havingAttrs": [], "mappedAttributes": [["Works_EMPLOYEE_PROJECT", "PROJECT_name", 0.5, ["full", "name"], "conference.full_name", "str"], [null, null, 0, "name", "domain.name", null], [null, null, 0, "name", "conference.name", null]], "mappedAttributesDict": {"conference.full_name": ["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]}, "mappedEntites": [["Works_EMPLOYEE_PROJECT", ["work", "employee", "project"], 0.3333333333333333, ["domain", "conference"]]], "mappedEntitesDict": {"domain_conference": "Works_EMPLOYEE_PROJECT"}, "orderByAttrs": [], "origQuery": {"aggrAttrs": [["conference.name", "count"]], "entities": ["domain_conference", "domain", "conference"], "groupByAttrs": ["domain.name", "conference.full_name"], "havingAttrs": [], "joinAttrs": ["domain_conference.domain_id", "domain.id", "domain_conference.conference_id", "conference.id"], "orderByAttrs": [], "query": "select domains.name , count ( conferences.name ) from domains_conferences join domains on domains_conferences.domain_id = domains.id join conferences on domains_conferences.conference_id = conferences.id where conferences.name like ' % ecdl % ' group by domains.name , conferences.full_name limit 9", "selectAttrs": ["domain.name"], "whereAttrs": []}, "rank": 0, "selectAttrs": [["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]], "selectScore": 16286, "updatedGroupByAttrs": [], "whereAttrs": [], "whereScore": 0}, "queryParams": [], "response": {"Works_EMPLOYEE_PROJECT.PROJECT_name": "str"}, "ui_name": "get works_employee_project", "url": "works_employee_project/get_works_employee_project"}, "{ 'Works_EMPLOYEE_PROJECT.PROJECT_name' : fields.String }"]]}}