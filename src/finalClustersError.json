[[], [[{"method": "get", "url": "department_location/get_department_location_filteredby_department_name", "queryParams": [["DEPARTMENT_location.DEPARTMENT_name", "str", "in", null]], "bodyParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str"}, "ui_name": "get department_location filtered by department_name", "cluster_name": "department_location", "endpoint_name": "get_department_location_filteredby_department_name", "is_single_entity": true, "query": "SELECT DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location WHERE DEPARTMENT_location.DEPARTMENT_name in value;", "queryObj": {"coverage": 0.5, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["city", "name"], "geographics.city_name", "str"], [null, null, 0, "*", "restaurant.*", null]], "mappedAttributesDict": {"geographics.city_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntitesDict": {"location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select geographics.city_name , count ( restaurants.* ) from locations join geographics on locations.city_name = geographics.city_name join restaurants on restaurants.id = locations.restaurant_id where geographics.city_name in ( ' kenwood ' , ' saratoga ' ) group by geographics.city_name", "entities": ["location", "geographics", "restaurant"], "selectAttrs": ["geographics.city_name"], "joinAttrs": ["location.city_name", "geographics.city_name", "restaurant.id", "location.restaurant_id"], "groupByAttrs": ["geographics.city_name"], "orderByAttrs": [], "aggrAttrs": [["restaurant.*", "count"]], "whereAttrs": [["geographics.city_name", "in", "value", "None"]], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "groupByAttrs": [], "aggrAttrs": [], "orderByAttrs": [], "whereAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "in", "value", ""]], "havingAttrs": [], "updatedGroupByAttrs": [], "rank": 0, "whereScore": 1, "selectScore": 1}, "is_updated": false}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_department_name", "queryParams": [], "bodyParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "count_DEPARTMENT_location.DEPARTMENT_name": "int"}, "ui_name": "get department_location grouped by department_name", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_department_name", "is_single_entity": true, "query": "SELECT count ( DEPARTMENT_location.DEPARTMENT_name ), DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.DEPARTMENT_name;", "queryObj": {"coverage": 1.0, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["office", "location"]]], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "company.name", "str"]], "mappedAttributesDict": {"company.name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntitesDict": {"office_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select t3.name , count ( t3.name ) from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t3.name", "entities": ["office_location", "building", "company"], "selectAttrs": ["company.name"], "joinAttrs": ["office_location.building_id", "building.id", "office_location.company_id", "company.id"], "groupByAttrs": ["company.name"], "orderByAttrs": [], "aggrAttrs": [["company.name", "count"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "aggrAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "orderByAttrs": [], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'count_DEPARTMENT_location.DEPARTMENT_name' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_department_name_orderedby_department_name", "queryParams": [["is_order_of_DEPARTMENT_name_desc", "bool", null, ""]], "bodyParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "count_DEPARTMENT_location.DEPARTMENT_name": "int"}, "ui_name": "get department_location grouped by department_name ordered by department_name", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_department_name_orderedby_department_name", "is_single_entity": true, "query": "SELECT count ( DEPARTMENT_location.DEPARTMENT_name ), DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.DEPARTMENT_name ORDER BY DEPARTMENT_location.DEPARTMENT_name ASC;", "queryObj": {"coverage": 1.0, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["office", "location"]]], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "company.name", "str"]], "mappedAttributesDict": {"company.name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntitesDict": {"office_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select t3.name , count ( t3.name ) from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t3.name order by t3.name asc", "entities": ["office_location", "building", "company"], "selectAttrs": ["company.name"], "joinAttrs": ["office_location.building_id", "building.id", "office_location.company_id", "company.id"], "groupByAttrs": ["company.name"], "orderByAttrs": [["company.name", ""]], "aggrAttrs": [["company.name", "count"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "aggrAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], ""]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'count_DEPARTMENT_location.DEPARTMENT_name' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_department_name_orderedby_count_department_name", "queryParams": [["is_order_of_count_DEPARTMENT_name_desc", "bool", null, "count"]], "bodyParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str", "count_DEPARTMENT_location.DEPARTMENT_name": "int"}, "ui_name": "get department_location grouped by department_name ordered by count_department_name", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_department_name_orderedby_count_department_name", "is_single_entity": true, "query": "SELECT count ( DEPARTMENT_location.DEPARTMENT_name ), DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.DEPARTMENT_name ORDER BY count ( DEPARTMENT_location.DEPARTMENT_name ) DESC;", "queryObj": {"coverage": 1.0, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["office", "location"]]], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "company.name", "str"]], "mappedAttributesDict": {"company.name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntitesDict": {"office_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select t3.name , count ( t3.name ) from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t3.name order by count ( t3.name ) asc", "entities": ["office_location", "building", "company"], "selectAttrs": ["company.name"], "joinAttrs": ["office_location.building_id", "building.id", "office_location.company_id", "company.id"], "groupByAttrs": ["company.name"], "orderByAttrs": [["company.name", "count"]], "aggrAttrs": [["company.name", "count"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "groupByAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "aggrAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "count"]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.DEPARTMENT_name"], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String,'count_DEPARTMENT_location.DEPARTMENT_name' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_location", "queryParams": [], "bodyParams": [], "response": {"DEPARTMENT_location.location": "str", "count_all": "int"}, "ui_name": "get department_location grouped by location", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location", "is_single_entity": true, "query": "SELECT count ( * ), count ( DEPARTMENT_location.location ), DEPARTMENT_location.location FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.location;", "queryObj": {"coverage": 1.0, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedAttributes": [["DEPARTMENT_location", "location", 0.25, ["date", "in", "location", "from"], "date_in_location_from", "str"]], "mappedAttributesDict": {"date_in_location_from": ["DEPARTMENT_location.location", "str"]}, "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select date_in_location_from , count ( date_in_location_from ) from document_locations group by date_in_location_from", "entities": ["document_location"], "selectAttrs": ["date_in_location_from"], "joinAttrs": [], "groupByAttrs": ["date_in_location_from"], "orderByAttrs": [], "aggrAttrs": [["date_in_location_from", "count"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "groupByAttrs": [["DEPARTMENT_location.location", "str"]], "aggrAttrs": [[["*", null], "count"], [["DEPARTMENT_location.location", "str"], "count"]], "orderByAttrs": [], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "rank": 0, "whereScore": 0, "selectScore": 1874}, "is_updated": false}, "{ 'DEPARTMENT_location.location' : fields.String,'count_all' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_location_orderedby_location", "queryParams": [["is_order_of_location_desc", "bool", null, ""]], "bodyParams": [], "response": {"DEPARTMENT_location.location": "str", "count_all": "int"}, "ui_name": "get department_location grouped by location ordered by location", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location_orderedby_location", "is_single_entity": true, "query": "SELECT count ( * ), count ( DEPARTMENT_location.location ), DEPARTMENT_location.location FROM DEPARTMENT_location ORDER BY DEPARTMENT_location.location DESC;", "queryObj": {"coverage": 1.0, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedAttributes": [["DEPARTMENT_location", "location", 0.25, ["date", "in", "location", "from"], "date_in_location_from", "str"]], "mappedAttributesDict": {"date_in_location_from": ["DEPARTMENT_location.location", "str"]}, "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select date_in_location_from , count ( date_in_location_from ) from document_locations group by date_in_location_from order by date_in_location_from asc", "entities": ["document_location"], "selectAttrs": ["date_in_location_from"], "joinAttrs": [], "groupByAttrs": ["date_in_location_from"], "orderByAttrs": [["date_in_location_from", ""]], "aggrAttrs": [["date_in_location_from", "count"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "groupByAttrs": [], "aggrAttrs": [[["*", null], "count"], [["DEPARTMENT_location.location", "str"], "count"]], "orderByAttrs": [[["DEPARTMENT_location.location", "str"], ""]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "rank": 0, "whereScore": 0, "selectScore": 1874}, "is_updated": false}, "{ 'DEPARTMENT_location.location' : fields.String,'count_all' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_location_orderedby_count_location", "queryParams": [["is_order_of_count_location_desc", "bool", null, "count"]], "bodyParams": [], "response": {"DEPARTMENT_location.location": "str", "count_DEPARTMENT_location.location": "int"}, "ui_name": "get department_location grouped by location ordered by count_location", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location_orderedby_count_location", "is_single_entity": true, "query": "SELECT count ( DEPARTMENT_location.location ), DEPARTMENT_location.location FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.location ORDER BY count ( DEPARTMENT_location.location ) DESC;", "queryObj": {"coverage": 1.0, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedAttributes": [["DEPARTMENT_location", "location", 0.25, ["date", "in", "location", "from"], "date_in_location_from", "str"]], "mappedAttributesDict": {"date_in_location_from": ["DEPARTMENT_location.location", "str"]}, "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select date_in_location_from , count ( date_in_location_from ) from document_locations order by count ( date_in_location_from ) asc", "entities": ["document_location"], "selectAttrs": ["date_in_location_from"], "joinAttrs": [], "groupByAttrs": [], "orderByAttrs": [["date_in_location_from", "count"]], "aggrAttrs": [["date_in_location_from", "count"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "groupByAttrs": [["DEPARTMENT_location.location", "str"]], "aggrAttrs": [[["DEPARTMENT_location.location", "str"], "count"]], "orderByAttrs": [[["DEPARTMENT_location.location", "str"], "count"]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "rank": 0, "whereScore": 0, "selectScore": 1874}, "is_updated": false}, "{ 'DEPARTMENT_location.location' : fields.String,'count_DEPARTMENT_location.location' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_groupedby_location_orderedby_count_all", "queryParams": [["is_order_of_count_of_rows_desc", "bool", null, "count"]], "bodyParams": [], "response": {"DEPARTMENT_location.location": "str", "count_all": "int"}, "ui_name": "get department_location grouped by location ordered by count_all", "cluster_name": "department_location", "endpoint_name": "get_department_location_groupedby_location_orderedby_count_all", "is_single_entity": true, "query": "SELECT count ( * ), DEPARTMENT_location.location FROM DEPARTMENT_location GROUP BY DEPARTMENT_location.location ORDER BY count ( * ) ASC;", "queryObj": {"coverage": 0.5, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["document", "location"]]], "mappedAttributes": [[null, "*", 0, "*", "*", null], ["DEPARTMENT_location", "location", 0.5, ["location", "code"], "location_code", "str"]], "mappedAttributesDict": {"*": ["*", null], "location_code": ["DEPARTMENT_location.location", "str"]}, "mappedEntitesDict": {"document_location": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select location_code from document_locations group by location_code order by count ( * ) desc limit 1", "entities": ["document_location"], "selectAttrs": ["location_code"], "joinAttrs": [], "groupByAttrs": ["location_code"], "orderByAttrs": [["*", "count"]], "aggrAttrs": [], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.location", "str"]], "groupByAttrs": [["DEPARTMENT_location.location", "str"]], "aggrAttrs": [[["*", null], "count"]], "orderByAttrs": [[["*", null], "count"]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["DEPARTMENT_location.location"], "rank": 0, "whereScore": 0, "selectScore": 1874}, "is_updated": false}, "{ 'DEPARTMENT_location.location' : fields.String,'count_all' : fields.Integer }"], [{"method": "get", "url": "department_location/get_department_location_orderedby_department_name", "queryParams": [["is_order_of_DEPARTMENT_name_desc", "bool", null, ""]], "bodyParams": [], "response": {"DEPARTMENT_location.DEPARTMENT_name": "str"}, "ui_name": "get department_location ordered by department_name", "cluster_name": "department_location", "endpoint_name": "get_department_location_orderedby_department_name", "is_single_entity": true, "query": "SELECT DEPARTMENT_location.DEPARTMENT_name FROM DEPARTMENT_location ORDER BY DEPARTMENT_location.DEPARTMENT_name ASC;", "queryObj": {"coverage": 0.5, "entities": ["DEPARTMENT_location"], "cleanedEntities": [["department", "location"]], "goals": ["DEPARTMENT_location"], "mappedEntites": [["DEPARTMENT_location", ["department", "location"], 0.5, ["status"]]], "mappedAttributes": [["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["name"], "name", "str"], [null, null, 0, "id", "id", null]], "mappedAttributesDict": {"name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntitesDict": {"status": "DEPARTMENT_location"}, "bestJoin": [], "origQuery": {"query": "select name , id from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available > 12 order by name asc", "entities": ["station", "status"], "selectAttrs": ["name", "id"], "joinAttrs": ["station.id", "status.station_id"], "groupByAttrs": [], "orderByAttrs": [["name", ""]], "aggrAttrs": [], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["DEPARTMENT_location.DEPARTMENT_name", "str"]], "groupByAttrs": [], "aggrAttrs": [], "orderByAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], ""]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": [], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'DEPARTMENT_location.DEPARTMENT_name' : fields.String }"]], [[{"method": "get", "url": "employee/department_location/department/get_employee_department_location_department_filteredby_department_name", "queryParams": [["DEPARTMENT_location.DEPARTMENT_name", "str", "like", null]], "bodyParams": [], "response": {"EMPLOYEE.last_name": "str", "EMPLOYEE.first_name": "str"}, "ui_name": "get employee department_location department filtered by department_name", "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_filteredby_department_name", "is_single_entity": false, "query": "SELECT EMPLOYEE.last_name, EMPLOYEE.first_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn and DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name and DEPARTMENT_location.DEPARTMENT_name like value;", "queryObj": {"coverage": 0.75, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "cleanedEntities": [["employee"], ["department", "location"]], "goals": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "mappedEntites": [["EMPLOYEE", ["employee"], 1.0, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedAttributes": [["EMPLOYEE", "first_name", 0.5, ["last", "name"], "employee.last_name", "str"], [null, null, 0, "city", "location.city", null], ["EMPLOYEE", "last_name", 0.5, ["first", "name"], "employee.first_name", "str"], ["DEPARTMENT_location", "DEPARTMENT_name", 0.5, ["first", "name"], "employees.first_name", "str"]], "mappedAttributesDict": {"employee.last_name": ["EMPLOYEE.first_name", "str"], "employee.first_name": ["EMPLOYEE.last_name", "str"], "employees.first_name": ["DEPARTMENT_location.DEPARTMENT_name", "str"]}, "mappedEntitesDict": {"employee": "EMPLOYEE", "location": "DEPARTMENT_location", "DEPARTMENT": "DEPARTMENT"}, "bestJoin": [" EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn", " DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name"], "origQuery": {"query": "select t1.first_name , t1.last_name , t3.city from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id where t1.first_name like '%z%'", "entities": ["employee", "department", "location"], "selectAttrs": ["employee.first_name", "employee.last_name", "location.city"], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id"], "groupByAttrs": [], "orderByAttrs": [], "aggrAttrs": [], "whereAttrs": [["employees.first_name", "like", "value", "None"]], "havingAttrs": []}, "selectAttrs": [["EMPLOYEE.last_name", "str"], ["EMPLOYEE.first_name", "str"]], "groupByAttrs": [], "aggrAttrs": [], "orderByAttrs": [], "whereAttrs": [[["DEPARTMENT_location.DEPARTMENT_name", "str"], "like", "value", ""]], "havingAttrs": [], "updatedGroupByAttrs": [], "rank": 0, "whereScore": 7155, "selectScore": 2}, "is_updated": false}, "{ 'EMPLOYEE.last_name' : fields.String,'EMPLOYEE.first_name' : fields.String }"], [{"method": "get", "url": "employee/department_location/department/get_employee_department_location_department_groupedby_first_name", "queryParams": [], "bodyParams": [], "response": {"EMPLOYEE.first_name": "str", "sum_DEPARTMENT.EMPLOYEE_Manages_ssn": "str"}, "ui_name": "get employee department_location department grouped by first_name", "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_groupedby_first_name", "is_single_entity": false, "query": "SELECT sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ), EMPLOYEE.first_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn and DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name  GROUP BY EMPLOYEE.first_name;", "queryObj": {"coverage": 1.0, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "cleanedEntities": [["employee"], ["department", "location"]], "goals": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "mappedEntites": [["EMPLOYEE", ["employee"], 1.0, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedAttributes": [["DEPARTMENT", "EMPLOYEE_Manages_ssn", 0.3333333333333333, ["employee", "id"], "employee_id", "str"], ["EMPLOYEE", "first_name", 0.5, ["country", "name"], "country_name", "str"]], "mappedAttributesDict": {"employee_id": ["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "country_name": ["EMPLOYEE.first_name", "str"]}, "mappedEntitesDict": {"employee": "EMPLOYEE", "location": "DEPARTMENT_location", "DEPARTMENT": "DEPARTMENT"}, "bestJoin": [" EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn", " DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name"], "origQuery": {"query": "select country_name , sum ( employee_id ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id group by country_name", "entities": ["employee", "department", "location", "country"], "selectAttrs": ["country_name"], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id", "location.country_id", "country.country_id"], "groupByAttrs": ["country_name"], "orderByAttrs": [], "aggrAttrs": [["employee_id", "sum"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["EMPLOYEE.first_name", "str"]], "groupByAttrs": [["EMPLOYEE.first_name", "str"]], "aggrAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "orderByAttrs": [], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["EMPLOYEE.first_name"], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'EMPLOYEE.first_name' : fields.String,'sum_DEPARTMENT.EMPLOYEE_Manages_ssn' : fields.String }"], [{"method": "get", "url": "employee/department_location/department/get_employee_department_location_department_groupedby_first_name_orderedby_first_name", "queryParams": [["is_order_of_first_name_desc", "bool", null, ""]], "bodyParams": [], "response": {"EMPLOYEE.first_name": "str", "sum_DEPARTMENT.EMPLOYEE_Manages_ssn": "str"}, "ui_name": "get employee department_location department grouped by first_name ordered by first_name", "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_groupedby_first_name_orderedby_first_name", "is_single_entity": false, "query": "SELECT sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ), EMPLOYEE.first_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn and DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name  GROUP BY EMPLOYEE.first_name ORDER BY EMPLOYEE.first_name ASC;", "queryObj": {"coverage": 1.0, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "cleanedEntities": [["employee"], ["department", "location"]], "goals": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "mappedEntites": [["EMPLOYEE", ["employee"], 1.0, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedAttributes": [["DEPARTMENT", "EMPLOYEE_Manages_ssn", 0.3333333333333333, ["employee", "id"], "employee_id", "str"], ["EMPLOYEE", "first_name", 0.5, ["country", "name"], "country_name", "str"]], "mappedAttributesDict": {"employee_id": ["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "country_name": ["EMPLOYEE.first_name", "str"]}, "mappedEntitesDict": {"employee": "EMPLOYEE", "location": "DEPARTMENT_location", "DEPARTMENT": "DEPARTMENT"}, "bestJoin": [" EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn", " DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name"], "origQuery": {"query": "select country_name , sum ( employee_id ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id group by country_name order by country_name asc", "entities": ["employee", "department", "location", "country"], "selectAttrs": ["country_name"], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id", "location.country_id", "country.country_id"], "groupByAttrs": ["country_name"], "orderByAttrs": [["country_name", ""]], "aggrAttrs": [["employee_id", "sum"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["EMPLOYEE.first_name", "str"]], "groupByAttrs": [["EMPLOYEE.first_name", "str"]], "aggrAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "orderByAttrs": [[["EMPLOYEE.first_name", "str"], ""]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["EMPLOYEE.first_name"], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'EMPLOYEE.first_name' : fields.String,'sum_DEPARTMENT.EMPLOYEE_Manages_ssn' : fields.String }"], [{"method": "get", "url": "employee/department_location/department/get_employee_department_location_department_groupedby_first_name_orderedby_sum_employee_manages_ssn", "queryParams": [["is_order_of_sum_EMPLOYEE_Manages_ssn_desc", "bool", null, "sum"]], "bodyParams": [], "response": {"EMPLOYEE.first_name": "str", "sum_DEPARTMENT.EMPLOYEE_Manages_ssn": "str"}, "ui_name": "get employee department_location department grouped by first_name ordered by sum_employee_manages_ssn", "cluster_name": "employee_department_location_department", "endpoint_name": "get_employee_department_location_department_groupedby_first_name_orderedby_sum_employee_manages_ssn", "is_single_entity": false, "query": "SELECT sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ), EMPLOYEE.first_name FROM EMPLOYEE, DEPARTMENT_location, DEPARTMENT WHERE EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn and DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name  GROUP BY EMPLOYEE.first_name ORDER BY sum ( DEPARTMENT.EMPLOYEE_Manages_ssn ) DESC;", "queryObj": {"coverage": 1.0, "entities": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "cleanedEntities": [["employee"], ["department", "location"]], "goals": ["EMPLOYEE", "DEPARTMENT_location", "DEPARTMENT"], "mappedEntites": [["EMPLOYEE", ["employee"], 1.0, ["employee"]], ["DEPARTMENT_location", ["department", "location"], 0.5, ["location"]]], "mappedAttributes": [["DEPARTMENT", "EMPLOYEE_Manages_ssn", 0.3333333333333333, ["employee", "id"], "employee_id", "str"], ["EMPLOYEE", "first_name", 0.5, ["country", "name"], "country_name", "str"]], "mappedAttributesDict": {"employee_id": ["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "country_name": ["EMPLOYEE.first_name", "str"]}, "mappedEntitesDict": {"employee": "EMPLOYEE", "location": "DEPARTMENT_location", "DEPARTMENT": "DEPARTMENT"}, "bestJoin": [" EMPLOYEE.ssn = DEPARTMENT.EMPLOYEE_Manages_ssn", " DEPARTMENT.name = DEPARTMENT_location.DEPARTMENT_name"], "origQuery": {"query": "select country_name , sum ( employee_id ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id group by country_name order by sum ( employee_id ) asc", "entities": ["employee", "department", "location", "country"], "selectAttrs": ["country_name"], "joinAttrs": ["employee.department_id", "department.department_id", "department.location_id", "location.location_id", "location.country_id", "country.country_id"], "groupByAttrs": ["country_name"], "orderByAttrs": [["employee_id", "sum"]], "aggrAttrs": [["employee_id", "sum"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["EMPLOYEE.first_name", "str"]], "groupByAttrs": [["EMPLOYEE.first_name", "str"]], "aggrAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "orderByAttrs": [[["DEPARTMENT.EMPLOYEE_Manages_ssn", "str"], "sum"]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": ["EMPLOYEE.first_name"], "rank": 0, "whereScore": 0, "selectScore": 1}, "is_updated": false}, "{ 'EMPLOYEE.first_name' : fields.String,'sum_DEPARTMENT.EMPLOYEE_Manages_ssn' : fields.String }"]], [[{"method": "get", "url": "works_employee_project/get_works_employee_project_orderedby_project_name", "queryParams": [["is_order_of_PROJECT_name_desc", "bool", null, ""]], "bodyParams": [], "response": {"Works_EMPLOYEE_PROJECT.PROJECT_name": "str"}, "ui_name": "get works_employee_project ordered by project_name", "cluster_name": "works_employee_project", "endpoint_name": "get_works_employee_project_orderedby_project_name", "is_single_entity": true, "query": "SELECT Works_EMPLOYEE_PROJECT.PROJECT_name FROM Works_EMPLOYEE_PROJECT ORDER BY Works_EMPLOYEE_PROJECT.PROJECT_name DESC;", "queryObj": {"coverage": 0.3333333333333333, "entities": ["Works_EMPLOYEE_PROJECT"], "cleanedEntities": [["work", "employee", "project"]], "goals": ["Works_EMPLOYEE_PROJECT"], "mappedEntites": [["Works_EMPLOYEE_PROJECT", ["work", "employee", "project"], 0.3333333333333333, ["conference"]]], "mappedAttributes": [["Works_EMPLOYEE_PROJECT", "PROJECT_name", 0.5, ["name"], "conference.name", "str"], [null, null, 0, "homepage", "conference.homepage", null], [null, null, 0, "id", "conference.id", null]], "mappedAttributesDict": {"conference.name": ["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]}, "mappedEntitesDict": {"conference": "Works_EMPLOYEE_PROJECT"}, "bestJoin": [], "origQuery": {"query": "select conferences.id , conferences.homepage from conferences where conferences.name like ' % ifip % ' order by conferences.name desc", "entities": ["conference"], "selectAttrs": ["conference.id", "conference.homepage"], "joinAttrs": [], "groupByAttrs": [], "orderByAttrs": [["conference.name", ""]], "aggrAttrs": [], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]], "groupByAttrs": [], "aggrAttrs": [], "orderByAttrs": [[["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"], ""]], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": [], "rank": 0, "whereScore": 0, "selectScore": 16286}, "is_updated": false}, "{ 'Works_EMPLOYEE_PROJECT.PROJECT_name' : fields.String }"], [{"method": "get", "url": "works_employee_project/get_works_employee_project", "queryParams": [], "bodyParams": [], "response": {"Works_EMPLOYEE_PROJECT.PROJECT_name": "str"}, "ui_name": "get works_employee_project", "cluster_name": "works_employee_project", "endpoint_name": "get_works_employee_project", "is_single_entity": true, "query": "SELECT Works_EMPLOYEE_PROJECT.PROJECT_name FROM Works_EMPLOYEE_PROJECT;", "queryObj": {"coverage": 0.25, "entities": ["Works_EMPLOYEE_PROJECT"], "cleanedEntities": [["work", "employee", "project"]], "goals": ["Works_EMPLOYEE_PROJECT"], "mappedEntites": [["Works_EMPLOYEE_PROJECT", ["work", "employee", "project"], 0.3333333333333333, ["conference"]]], "mappedAttributes": [[null, null, 0, "reference_number", "publication.reference_number", null], ["Works_EMPLOYEE_PROJECT", "PROJECT_name", 0.5, ["full", "name"], "conference.full_name", "str"], [null, null, 0, "homepage", "conference.homepage", null], [null, null, 0, "id", "conference.id", null]], "mappedAttributesDict": {"conference.full_name": ["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]}, "mappedEntitesDict": {"conference": "Works_EMPLOYEE_PROJECT"}, "bestJoin": [], "origQuery": {"query": "select conferences.homepage , conferences.full_name , max ( publications.reference_number ) from publications join conferences on publications.conference_id = conferences.id group by conferences.homepage , conferences.full_name order by conferences.id desc limit 5", "entities": ["publication", "conference"], "selectAttrs": ["conference.homepage", "conference.full_name"], "joinAttrs": ["publication.conference_id", "conference.id"], "groupByAttrs": ["conference.homepage", "conference.full_name"], "orderByAttrs": [["conference.id", ""]], "aggrAttrs": [["publication.reference_number", "max"]], "whereAttrs": [], "havingAttrs": []}, "selectAttrs": [["Works_EMPLOYEE_PROJECT.PROJECT_name", "str"]], "groupByAttrs": [], "aggrAttrs": [], "orderByAttrs": [], "whereAttrs": [], "havingAttrs": [], "updatedGroupByAttrs": [], "rank": 0, "whereScore": 0, "selectScore": 16286}, "is_updated": false}, "{ 'Works_EMPLOYEE_PROJECT.PROJECT_name' : fields.String }"]], [[{"method": "get", "url": "dependent/get_dependent_filteredby_sex", "queryParams": [["DEPENDENT.sex", "str", "=", null]], "bodyParams": [], "response": {"count_all": "int"}, "ui_name": "get dependent filtered by sex", "cluster_name": "dependent", "endpoint_name": "get_dependent_filteredby_sex", "is_single_entity": true, "query": "SELECT count ( * ), * FROM DEPENDENT WHERE DEPENDENT.sex = value;", "queryObj": {"coverage": 0.5, "entities": ["DEPENDENT"], "cleanedEntities": [["dependent"]], "goals": ["DEPENDENT"], "mappedEntites": [["DEPENDENT", ["dependent"], 1.0, ["dependent"]]], "mappedAttributes": [[null, "*", 0, "*", "*", null], ["DEPENDENT", "sex", 1.0, ["sex"], "dependent.sex", "str"]], "mappedAttributesDict": {"*": ["*", null], "dependent.sex": ["DEPENDENT.sex", "str"]}, "mappedEntitesDict": {"dependent": "DEPENDENT"}, "bestJoin": [], "origQuery": {"query": "select count ( * ) from dependent as dependentalias0 where dependentalias0.sex = \" var0 \" ;", "entities": ["dependent"], "selectAttrs": [], "joinAttrs": [], "groupByAttrs": [], "orderByAttrs": [], "aggrAttrs": [["*", "count"]], "whereAttrs": [["dependent.sex", "=", "value", "None"]], "havingAttrs": []}, "selectAttrs": [], "groupByAttrs": [], "aggrAttrs": [[["*", null], "count"]], "orderByAttrs": [], "whereAttrs": [[["DEPENDENT.sex", "str"], "=", "value", ""]], "havingAttrs": [], "updatedGroupByAttrs": [], "rank": 0, "whereScore": 1960, "selectScore": 0}, "is_updated": false}, "{ 'count_all' : fields.Integer }"]]]